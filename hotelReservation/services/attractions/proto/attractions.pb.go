// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0-devel
// 	protoc        v3.6.1
// source: attractions.proto

package attractions

import (
	// protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	// protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	proto "github.com/golang/protobuf/proto"
	// reflect "reflect"
	sync "sync"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion4

const (
	Attractions_NearbyRest_FullMethodName = "/attractions.Attractions/NearbyRest"
	Attractions_NearbyMus_FullMethodName  = "/attractions.Attractions/NearbyMus"
)

// AttractionsClient is the client API for Attractions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AttractionsClient interface {
	NearbyRest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error)
	NearbyMus(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error)
}

type attractionsClient struct {
	cc *grpc.ClientConn
}

func NewAttractionsClient(cc *grpc.ClientConn) AttractionsClient {
	return &attractionsClient{cc}
}

func (c *attractionsClient) NearbyRest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, Attractions_NearbyRest_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attractionsClient) NearbyMus(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, Attractions_NearbyMus_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttractionsServer is the server API for Attractions service.
// All implementations must embed UnimplementedAttractionsServer
// for forward compatibility
type AttractionsServer interface {
	NearbyRest(context.Context, *Request) (*Result, error)
	NearbyMus(context.Context, *Request) (*Result, error)
}

// UnimplementedAttractionsServer must be embedded to have forward compatible implementations.
type UnimplementedAttractionsServer struct {
}

func (UnimplementedAttractionsServer) NearbyRest(context.Context, *Request) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NearbyRest not implemented")
}
func (UnimplementedAttractionsServer) NearbyMus(context.Context, *Request) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NearbyMus not implemented")
}
func (UnimplementedAttractionsServer) mustEmbedUnimplementedAttractionsServer() {}

// UnsafeAttractionsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AttractionsServer will
// result in compilation errors.
type UnsafeAttractionsServer interface {
	mustEmbedUnimplementedAttractionsServer()
}

func _Attractions_NearbyRest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttractionsServer).NearbyRest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Attractions_NearbyRest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttractionsServer).NearbyRest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Attractions_NearbyMus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttractionsServer).NearbyMus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Attractions_NearbyMus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttractionsServer).NearbyMus(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

// Attractions_ServiceDesc is the grpc.ServiceDesc for Attractions service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Attractions_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "attractions.Attractions",
	HandlerType: (*AttractionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NearbyRest",
			Handler:    _Attractions_NearbyRest_Handler,
		},
		{
			MethodName: "NearbyMus",
			Handler:    _Attractions_NearbyMus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "attractions.proto",
}

func RegisterAttractionsServer(s *grpc.Server, srv AttractionsServer) {
	s.RegisterService(&Attractions_ServiceDesc, srv)
}

type Request struct {
	HotelId string `protobuf:"bytes,1,opt,name=hotelId,proto3" json:"hotelId,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
}

func (x *Request) String() string {
	return proto.CompactTextString(x)
}

func (*Request) ProtoMessage() {}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_attractions_proto_rawDesc, []int{0}
}

func (x *Request) GetHotelId() string {
	if x != nil {
		return x.HotelId
	}
	return ""
}

type Result struct {
	AttractionIds []string `protobuf:"bytes,1,rep,name=attractionIds,proto3" json:"attractionIds,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
}

func (x *Result) String() string {
	return proto.CompactTextString(x)
}

func (*Result) ProtoMessage() {}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_attractions_proto_rawDesc, []int{1}
}

func (x *Result) GetAttractionIds() []string {
	if x != nil {
		return x.AttractionIds
	}
	return nil
}

// var File_attractions_proto protoreflect.FileDescriptor

var file_attractions_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x6f, 0x74, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f,
	0x74, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x32, 0x7e, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x52, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a,
	0x09, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x4d, 0x75, 0x73, 0x12, 0x14, 0x2e, 0x61, 0x74, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x2f, 0x44,
	0x65, 0x61, 0x74, 0x68, 0x53, 0x74, 0x61, 0x72, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x2f, 0x68, 0x6f,
	0x74, 0x65, 0x6c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_attractions_proto_rawDescOnce sync.Once
	file_attractions_proto_rawDescData = file_attractions_proto_rawDesc
)

var file_attractions_proto_goTypes = []interface{}{
	(*Request)(nil), // 0: attractions.Request
	(*Result)(nil),  // 1: attractions.Result
}
var file_attractions_proto_depIdxs = []int32{
	0, // 0: attractions.Attractions.NearbyRest:input_type -> attractions.Request
	0, // 1: attractions.Attractions.NearbyMus:input_type -> attractions.Request
	1, // 2: attractions.Attractions.NearbyRest:output_type -> attractions.Result
	1, // 3: attractions.Attractions.NearbyMus:output_type -> attractions.Result
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

